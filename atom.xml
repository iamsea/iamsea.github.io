<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sea&#39;s blog</title>
  
  <subtitle>产品在于设计 创新赋予灵魂</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-12-11T11:34:52.717Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>iamsea</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>django 2.0（一）安装与连接MySQL</title>
    <link href="http://yoursite.com/2017/12/09/django1/"/>
    <id>http://yoursite.com/2017/12/09/django1/</id>
    <published>2017-12-09T09:00:31.000Z</published>
    <updated>2017-12-11T11:34:52.717Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>django2.0不支持python2.x，所以安装python3.x。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># linux安装python3</span><br><span class="line">$ sudo apt-get install python3</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mac安装python3</span><br><span class="line">$ brew install python3</span><br></pre></td></tr></table></figure><p>安装django 2.0：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip3 install django==2.0</span><br></pre></td></tr></table></figure></p><h2 id="站点初始化"><a href="#站点初始化" class="headerlink" title="站点初始化"></a>站点初始化</h2><p><strong>1. 初始化</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ django-admin startproject mysite</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">主要文件结构：</span><br><span class="line">mysite/</span><br><span class="line">├── db.sqlite3  # 自带数据库文件</span><br><span class="line">├── manage.py   # 项目管理文件</span><br><span class="line">└── mysite</span><br><span class="line">    ├── __init__.py    </span><br><span class="line">    ├── settings.py  # 全局设置文件</span><br><span class="line">    ├── urls.py      # 全局路由控制</span><br><span class="line">    └── wsgi.py      # 服务器部署文件</span><br></pre></td></tr></table></figure><p><strong>2. 站点预览</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd mysite</span><br><span class="line">$ python3 manage.py runserver</span><br></pre></td></tr></table></figure></p><p>注：runserver后面可指定ip及端口号，如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 manage.py runserver 127.0.0.1:8000</span><br></pre></td></tr></table></figure></p><h2 id="连接MySQL数据库"><a href="#连接MySQL数据库" class="headerlink" title="连接MySQL数据库"></a>连接MySQL数据库</h2><p><strong>1. 安装django与mysql的连接工具mysqlclient</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pip3 install mysqlclient</span><br></pre></td></tr></table></figure></p><p>注：若使用3.6以下版本的python，则须使用pymysql代替mysqlclient<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pip3 install pymysql</span><br></pre></td></tr></table></figure></p><p>并在<code>mysite/mysite/__init__.py</code>文件加入以下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import pymysql</span><br><span class="line">pymysql.install_as_MySQLdb()</span><br></pre></td></tr></table></figure></p><p><strong>2. 配置数据库信息</strong><br>修改<code>mysite/mysite/settings.py</code>文件代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    &apos;default&apos;: &#123;</span><br><span class="line">        &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;,</span><br><span class="line">        &apos;NAME&apos;: &apos;test&apos;, </span><br><span class="line">        &apos;USER&apos;: &apos;root&apos;,</span><br><span class="line">        &apos;PASSWORD&apos;: &apos;123456&apos;,</span><br><span class="line">        &apos;HOST&apos;:&apos;localhost&apos;,</span><br><span class="line">        &apos;PORT&apos;:&apos;3306&apos;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>3. 新建app</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ django-admin.py startapp TestModel</span><br></pre></td></tr></table></figure></p><p><strong>4. 修改<code>mysite/TestModel/models.py</code>文件代码（定义模型）：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from django.db import models</span><br><span class="line"> </span><br><span class="line">class Test(models.Model):</span><br><span class="line">    name = models.CharField(max_length=20)</span><br></pre></td></tr></table></figure></p><p><strong>5. 修改<code>mysite/mysite/settings.py</code>文件代码：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = (</span><br><span class="line">    &apos;django.contrib.admin&apos;,</span><br><span class="line">    &apos;django.contrib.auth&apos;,</span><br><span class="line">    &apos;django.contrib.contenttypes&apos;,</span><br><span class="line">    &apos;django.contrib.sessions&apos;,</span><br><span class="line">    &apos;django.contrib.messages&apos;,</span><br><span class="line">    &apos;django.contrib.staticfiles&apos;,</span><br><span class="line">    &apos;TestModel&apos;,  # 添加此项</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p><strong>6. 创建表结构</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ python3 manage.py migrate  // 创建数据库</span><br><span class="line">$ python3 manage.py makemigrations TestModel  # 让 Django 知道我们在我们的模型有一些变更</span><br><span class="line">$ python3 manage.py migrate TestModel  # 创建表结构</span><br></pre></td></tr></table></figure></p><p>注：若提示<code>django.db.utils.InternalError: (1049, &quot;Unknown database &#39;test&#39;&quot;)</code>，则需先手动在mysql创建test数据库</p><h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h2><p><strong>1. 添加数据</strong><br>添加<code>mysite/mysite/testdb.py</code>文件，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"> </span><br><span class="line">from django.http import HttpResponse</span><br><span class="line"> </span><br><span class="line">from TestModel.models import Test</span><br><span class="line"> </span><br><span class="line"># 数据库操作</span><br><span class="line">def testdb(request):</span><br><span class="line">    test1 = Test(name=&apos;luna&apos;)</span><br><span class="line">    test1.save()</span><br><span class="line">    return HttpResponse(&quot;&lt;p&gt;数据添加成功！&lt;/p&gt;&quot;)</span><br></pre></td></tr></table></figure></p><p>修改<code>mysite/mysite/urls.py</code>文件代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from django.contrib import admin</span><br><span class="line">from django.urls import path</span><br><span class="line"></span><br><span class="line">from django.conf.urls import *</span><br><span class="line">from . import testdb</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(&apos;admin/&apos;, admin.site.urls),</span><br><span class="line">    url(r&apos;^testdb$&apos;, testdb.testdb),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>访问 <a href="http://127.0.0.1:8000/testdb" target="_blank" rel="external">http://127.0.0.1:8000/testdb</a> 即可将数据添加到数据库。<br>注：若出现utf-8编码问题，用记事本将文件转utf-8编码格式即可。<br><strong>2. 删除数据</strong><br>修改<code>mysite/mysite/testdb.py</code>文件代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"> </span><br><span class="line">from django.http import HttpResponse</span><br><span class="line"> </span><br><span class="line">from TestModel.models import Test</span><br><span class="line"> </span><br><span class="line"># 数据库操作</span><br><span class="line">def testdb(request):</span><br><span class="line">    # 删除id=1的数据</span><br><span class="line">    test1 = Test.objects.get(id=1)</span><br><span class="line">    test1.delete()</span><br><span class="line">    </span><br><span class="line">    # 另外一种方式</span><br><span class="line">    # Test.objects.filter(id=1).delete()</span><br><span class="line">    </span><br><span class="line">    # 删除所有数据</span><br><span class="line">    # Test.objects.all().delete()</span><br><span class="line">    </span><br><span class="line">    return HttpResponse(&quot;&lt;p&gt;删除成功&lt;/p&gt;&quot;)</span><br></pre></td></tr></table></figure></p><p>访问 <a href="http://127.0.0.1:8000/testdb" target="_blank" rel="external">http://127.0.0.1:8000/testdb</a> 即可将数据从数据库删除。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="http://www.runoob.com/django/django-model.html" target="_blank" rel="external">Django 模型</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;django2.0不支持python2.x，所以安装python3.x。&lt;br&gt;&lt;figure class=&quot;highlight plain
      
    
    </summary>
    
      <category term="django 2.0" scheme="http://yoursite.com/categories/django-2-0/"/>
    
    
      <category term="django连接mysql" scheme="http://yoursite.com/tags/django%E8%BF%9E%E6%8E%A5mysql/"/>
    
  </entry>
  
  <entry>
    <title>Cloudflare 免费SSL证书使用</title>
    <link href="http://yoursite.com/2017/11/28/ssl-https/"/>
    <id>http://yoursite.com/2017/11/28/ssl-https/</id>
    <published>2017-11-28T09:29:08.000Z</published>
    <updated>2017-12-06T06:45:24.601Z</updated>
    
    <content type="html"><![CDATA[<p>这段时间用Hexo框架搭建了个博客，并部署到了Github，然后重定向到自己的域名，至此网站使用的是http。那么问题来了，如何启动网站的https？</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p><a href="https://www.cloudflare.com/" target="_blank" rel="external">Cloudflare</a><br>Cloudflare以向客户提供网站安全管理、性能优化及相关的技术支持为主要业务。我们这里使用全站Cloudflare的免费SSL证书实现全站SSL加密（即https）访问。</p><h2 id="创建Cloudflare账户并添加网站"><a href="#创建Cloudflare账户并添加网站" class="headerlink" title="创建Cloudflare账户并添加网站"></a>创建Cloudflare账户并添加网站</h2><p><a href="https://www.cloudflare.com/a/sign-up" target="_blank" rel="external">注册</a>并登录后，输入你的网站进行扫描域名解析。<br><img src="http://upload-images.jianshu.io/upload_images/2569188-82d3ab95381fdca4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>如果提示没有正常扫描域名解析，则需要手动点击Add Record添加。<br><img src="http://upload-images.jianshu.io/upload_images/2569188-022250c87a763b53.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="域名解析.png"></p><h2 id="域名服务器"><a href="#域名服务器" class="headerlink" title="域名服务器"></a>域名服务器</h2><p>选择免费服务后会得到两个域名服务器。<br><img src="http://upload-images.jianshu.io/upload_images/2569188-9ef1318e701642ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="免费服务.png"><br><img src="http://upload-images.jianshu.io/upload_images/2569188-23104c1e67e514f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="DNS.png"></p><h2 id="修改所使用域名的DNS"><a href="#修改所使用域名的DNS" class="headerlink" title="修改所使用域名的DNS"></a>修改所使用域名的DNS</h2><p>我这里使用的是阿里<a href="https://wanwang.aliyun.com/" target="_blank" rel="external">万网</a>的域名，进入域名管理进行DNS修改就可以了。<br><img src="http://upload-images.jianshu.io/upload_images/2569188-c53b1e4cf7f3d75d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="域名DNS.png"></p><h2 id="Cloudflare站点配置"><a href="#Cloudflare站点配置" class="headerlink" title="Cloudflare站点配置"></a>Cloudflare站点配置</h2><h3 id="Overview界面，检查域名DNS"><a href="#Overview界面，检查域名DNS" class="headerlink" title="Overview界面，检查域名DNS"></a>Overview界面，检查域名DNS</h3><p>点击继续，然后点击 Recheck Nameservers检查域名DNS是否已修改成功，这里可能有些时间延迟，成功后会提示Status: Active。<br><img src="http://upload-images.jianshu.io/upload_images/2569188-4c382823f7a519d6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Overview.png"><br><img src="http://upload-images.jianshu.io/upload_images/2569188-cf6a9a03a08fbd19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Overview.png"></p><h3 id="Crypto界面，配置SSL加密"><a href="#Crypto界面，配置SSL加密" class="headerlink" title="Crypto界面，配置SSL加密"></a>Crypto界面，配置SSL加密</h3><p>选择Flexible加密方式，加密方式区别如下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Flexible SSL：您的网站访问者和Cloudflare之间有加密连接，但是从Cloudflare到您的服务器没有加密。即半程加密。优点在于：你的网站不需要SSL证书，用户也能实现SSL加密访问。</span><br><span class="line">Full SSL：全程加密，即从你的网站到CDN服务器再到用户，全程都是SSL加密的。优点在于：只要你的服务器有SSL证书（不管是自签名证书还是购买的SSL），就可以实现SSL加密访问。</span><br><span class="line">Full SSL (strict)：全程加密，它与Full SSL的区别在于你的服务器必须是安装了那些已经受信任的SSL证书（即购买的SSL证书），否则无法开启SSL加密访问。</span><br><span class="line">Strict (SSL-Only Origin Pull)：企业模式。自动将所有的Http转化为Https加密访问，要求你的服务器安装了受信任的有效的SSL证书。</span><br></pre></td></tr></table></figure></p><p><img src="http://upload-images.jianshu.io/upload_images/2569188-019b57fe4e2f70ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Crypto.png"></p><h3 id="Page-Rules界面，页面重定向"><a href="#Page-Rules界面，页面重定向" class="headerlink" title="Page Rules界面，页面重定向"></a>Page Rules界面，页面重定向</h3><p>以iamsea.top这个域名为例。</p><h4 id="二级域名重定向"><a href="#二级域名重定向" class="headerlink" title="二级域名重定向"></a>二级域名重定向</h4><p>二级域名www.iamsea.top重定向到一级域名<a href="https://iamsea.top。" target="_blank" rel="external">https://iamsea.top。</a><br><img src="http://upload-images.jianshu.io/upload_images/2569188-b75304909b8bee44.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Page Rules.png"></p><h4 id="将http访问转为https访问"><a href="#将http访问转为https访问" class="headerlink" title="将http访问转为https访问"></a>将http访问转为https访问</h4><p><img src="http://upload-images.jianshu.io/upload_images/2569188-e82d8d3353d1cfb8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Page Rules.png"></p><p><img src="http://upload-images.jianshu.io/upload_images/2569188-e55cd81b7d1c9099.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Page Rules.png"></p><p>配置生效可能有时间延迟，以上。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://segmentfault.com/a/1190000007740693" target="_blank" rel="external">为自定义域名的GitHub Pages添加SSL 完整方案</a></li><li><a href="https://www.freehao123.com/cloudflare-cdn-ssl/" target="_blank" rel="external">新Cloudflare免费CDN加速和Cloudflare免费SSL证书服务申请与使用</a></li><li><a href="https://zvv.me/z/1032.html" target="_blank" rel="external">利用 cloudflare flexible ssl实现wordpress全站强制https</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这段时间用Hexo框架搭建了个博客，并部署到了Github，然后重定向到自己的域名，至此网站使用的是http。那么问题来了，如何启动网站的https？&lt;/p&gt;
&lt;h2 id=&quot;工具&quot;&gt;&lt;a href=&quot;#工具&quot; class=&quot;headerlink&quot; title=&quot;工具&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="Cloudflare" scheme="http://yoursite.com/tags/Cloudflare/"/>
    
      <category term="Hexo站点https" scheme="http://yoursite.com/tags/Hexo%E7%AB%99%E7%82%B9https/"/>
    
      <category term="网络" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客（四）添加Gitment评论系统</title>
    <link href="http://yoursite.com/2017/11/21/hexo-comment/"/>
    <id>http://yoursite.com/2017/11/21/hexo-comment/</id>
    <published>2017-11-21T13:37:56.000Z</published>
    <updated>2017-12-12T07:47:24.034Z</updated>
    
    <content type="html"><![CDATA[<p>本教程基于hexo博客next主题</p><h2 id="注册-OAuth-Application"><a href="#注册-OAuth-Application" class="headerlink" title="注册 OAuth Application"></a>注册 OAuth Application</h2><p><a href="https://github.com/settings/applications/new" target="_blank" rel="external">点击此处</a> 来注册一个新的 OAuth Application。其他内容可以随意填写，但要确保填入正确的 <code>callback URL</code>（一般是博客的域名，如Hexo博客部署到Github, 生成域名<code>http://iamsea.github.io</code>，最终解析到<code>http://iamsea.top</code>，则此时应该填入的是<code>http://iamsea.top</code>），注册成功后生成<code>client_id</code>及<code>client_secret</code>。<br><img src="http://upload-images.jianshu.io/upload_images/2569188-badee872d96878bc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="oauth_application.png"></p><h2 id="引入Gitment"><a href="#引入Gitment" class="headerlink" title="引入Gitment"></a>引入Gitment</h2><p>在博客目录下执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save gitment</span><br></pre></td></tr></table></figure></p><p>打开主题配置文件_config.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">gitment:</span><br><span class="line">  enable: true # 是否开启gitment评论系统</span><br><span class="line">  mint: true #</span><br><span class="line">  count: true # 是否显示评论数</span><br><span class="line">  lazy: true # 懒加载，设置为ture时需手动展开评论</span><br><span class="line">  cleanly: true # 是否隐藏&apos;Powered by ...&apos;</span><br><span class="line">  language: en # 语言，置空则随主题的语言</span><br><span class="line">  github_user: iamsea # Github用户名</span><br><span class="line">  github_repo: comment # 在Github新建一个仓库用于存放评论，这是仓库名</span><br><span class="line">  client_id: a6df579b14f7da8ed99c # 注册OAuth Application时生成</span><br><span class="line">  client_secret: 1f6568974d6f3ed28055d2243d05457f7e04cfd3 # 注册OAuth Application时生成</span><br><span class="line">  proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect</span><br><span class="line">  redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled</span><br></pre></td></tr></table></figure></p><h2 id="初始化评论"><a href="#初始化评论" class="headerlink" title="初始化评论"></a>初始化评论</h2><p>页面发布后，你需要访问页面并使用你的 GitHub 账号登录（请确保你的账号是第二步所填 repo 的 owner），点击初始化按钮。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://imsun.net/posts/gitment-introduction/" target="_blank" rel="external">Gitment：使用 GitHub Issues 搭建评论系统</a><br><a href="https://github.com/imsun/gitment/issues" target="_blank" rel="external">Gitment配置相关问题</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本教程基于hexo博客next主题&lt;/p&gt;
&lt;h2 id=&quot;注册-OAuth-Application&quot;&gt;&lt;a href=&quot;#注册-OAuth-Application&quot; class=&quot;headerlink&quot; title=&quot;注册 OAuth Application&quot;&gt;&lt;/a&gt;注
      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="Hexo添加Gitment" scheme="http://yoursite.com/tags/Hexo%E6%B7%BB%E5%8A%A0Gitment/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客（三）域名配置</title>
    <link href="http://yoursite.com/2017/11/21/hexo-domain/"/>
    <id>http://yoursite.com/2017/11/21/hexo-domain/</id>
    <published>2017-11-21T02:00:21.000Z</published>
    <updated>2017-12-12T07:43:58.082Z</updated>
    
    <content type="html"><![CDATA[<h2 id="域名配置"><a href="#域名配置" class="headerlink" title="域名配置"></a>域名配置</h2><p>把访问域名git_name.github.io替换成自己的域名。</p><h3 id="申请个人域名"><a href="#申请个人域名" class="headerlink" title="申请个人域名"></a>申请个人域名</h3><p>我是在<a href="https://wanwang.aliyun.com/" target="_blank" rel="external">万网</a>申请的，需要进行备案，因为是学习用的，所以申请了.top的域名，首年只要两块钱就可以搞定。</p><h3 id="添加DNS解析"><a href="#添加DNS解析" class="headerlink" title="添加DNS解析"></a>添加DNS解析</h3><ol><li>ping初始域名。比如我的Gighub Hexo博客域名为iamsea.github.io<br><img src="http://upload-images.jianshu.io/upload_images/2569188-da68b131de363334.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="get_ip.png"></li><li>进入域名解析设置，添加两条解析，记录值为ping指向的ip<br><img src="http://upload-images.jianshu.io/upload_images/2569188-f7ad2ef37ddbf8a3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="domain_set.png"><h3 id="添加GNAME文件"><a href="#添加GNAME文件" class="headerlink" title="添加GNAME文件"></a>添加GNAME文件</h3>进入本地博客项目的source目录，新建GNAME文件，注意GNAME文件没有后缀，文件内容为新的域名。<h3 id="Github项目设置"><a href="#Github项目设置" class="headerlink" title="Github项目设置"></a>Github项目设置</h3>进入Github的博客项目的设置项，修改Custom domain并保存，即会自动生成CNAME文件。ps: 或者进入本地博客项目的source目录，新建CNAME文件，注意CNAME文件没有后缀，文件内容为新的域名。<br><img src="http://upload-images.jianshu.io/upload_images/2569188-9ff0b6695d01a7bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="custom_domain.png"></li></ol><p>配置完成。</p><h2 id="DNS分流"><a href="#DNS分流" class="headerlink" title="DNS分流"></a>DNS分流</h2><p>加速博客访问速度</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;域名配置&quot;&gt;&lt;a href=&quot;#域名配置&quot; class=&quot;headerlink&quot; title=&quot;域名配置&quot;&gt;&lt;/a&gt;域名配置&lt;/h2&gt;&lt;p&gt;把访问域名git_name.github.io替换成自己的域名。&lt;/p&gt;
&lt;h3 id=&quot;申请个人域名&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="Hexo域名配置" scheme="http://yoursite.com/tags/Hexo%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客（二）配置</title>
    <link href="http://yoursite.com/2017/11/16/hexo_use/"/>
    <id>http://yoursite.com/2017/11/16/hexo_use/</id>
    <published>2017-11-16T03:27:10.000Z</published>
    <updated>2017-12-12T07:40:56.669Z</updated>
    
    <content type="html"><![CDATA[<h2 id="站点基本配置"><a href="#站点基本配置" class="headerlink" title="站点基本配置"></a>站点基本配置</h2><p>站点配置文件_config.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: 王者峡谷# 博客标题</span><br><span class="line">subtitle:# 博客副标题</span><br><span class="line">description: 见过我家那只可爱的宠物吗# 作者描述</span><br><span class="line">author: Lunar# 作者名</span><br><span class="line">language: zh-Hans# 博客语言</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure></p><h2 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h2><ol><li>下载主题，将主题文件夹放入<code>blog/themes</code>文件夹</li><li>修改 <code>blog/_config.yml</code> 文件里面的 <code>theme</code> 字段为新的主题文件夹名</li><li>如果该主题有相关依赖插件，记得安装</li><li><code>hexo g -d</code>提交<h2 id="修改导航栏"><a href="#修改导航栏" class="headerlink" title="修改导航栏"></a>修改导航栏</h2>这里以<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">next</a>主题为例<br>初始导航栏只有首页跟归档</li><li>打开<code>blog/themes/next/_config.yml</code>主题配置文件</li><li><p>修改menu字段，取消about(关于)及tags(标签)的注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  #categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure></li><li><p>修改后博客会多出对应的导航项，但导航页面要另外添加</p></li></ol><h2 id="添加导航页面"><a href="#添加导航页面" class="headerlink" title="添加导航页面"></a>添加导航页面</h2><p><strong>1. 添加关于导航页</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd blog</span><br><span class="line">$ hexo new page about</span><br></pre></td></tr></table></figure></p><p>此时会在source目录下生about目录<br>打开<code>blog/source/about/index.md</code>文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: about</span><br><span class="line">date: 2017-11-15 15:02:22</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>作如下修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 关于</span><br><span class="line">date: 2017-11-15 15:02:22</span><br><span class="line">---</span><br><span class="line">这是关于页。。。</span><br></pre></td></tr></table></figure></p><p><strong>2. 添加标签导航页</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure></p><p>此时会在source目录下生tags目录<br>打开<code>blog/source/tags/index.md</code>文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2017-11-15 12:25:21</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>作如下修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2017-11-15 12:25:21</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p><strong>3. 添加分类导航页面</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure></p><p>此时会在source目录下生categories目录<br>打开<code>blog/source/categories/index.md</code>文件<br>作同样修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2017-11-15 14:38:58</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><h2 id="新建博客"><a href="#新建博客" class="headerlink" title="新建博客"></a>新建博客</h2><p>比如新建一篇博文叫《Hexo安装》<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new  hexo-install</span><br></pre></td></tr></table></figure></p><p>此时会在source目录下的_posts目录生成hexo-install.md文件<br>打开这个文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo_install</span><br><span class="line">date: 2017-11-16 15:04:29</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>进行如下编辑<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo安装</span><br><span class="line">date: 2017-11-16 15:04:29</span><br><span class="line">tags: Hexo</span><br><span class="line">categories: Hexo</span><br><span class="line">---</span><br><span class="line">博文内容...</span><br></pre></td></tr></table></figure></p><p><code>title: Hexo安装</code>是博文标题<br><code>tags: Hexo</code>是标签信息<br><code>categories: Hexo</code>是分类信息</p><h2 id="添加用户头像"><a href="#添加用户头像" class="headerlink" title="添加用户头像"></a>添加用户头像</h2><p>将头像图片(eg: avatar.png)放在next主题source/images目录下<br>取消主题配置文件_config.yml下的avatar字段的注释<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar: /images/avatar.png</span><br></pre></td></tr></table></figure></p><h2 id="博文中文乱码问题"><a href="#博文中文乱码问题" class="headerlink" title="博文中文乱码问题"></a>博文中文乱码问题</h2><p>用记事本打开.md文件并另存为UTF-8格式即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;站点基本配置&quot;&gt;&lt;a href=&quot;#站点基本配置&quot; class=&quot;headerlink&quot; title=&quot;站点基本配置&quot;&gt;&lt;/a&gt;站点基本配置&lt;/h2&gt;&lt;p&gt;站点配置文件_config.yml&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="Hexo搭建" scheme="http://yoursite.com/tags/Hexo%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客（一）搭建</title>
    <link href="http://yoursite.com/2017/11/14/hexo_build/"/>
    <id>http://yoursite.com/2017/11/14/hexo_build/</id>
    <published>2017-11-14T03:27:10.000Z</published>
    <updated>2017-12-12T07:47:54.814Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo简介与安装"><a href="#Hexo简介与安装" class="headerlink" title="Hexo简介与安装"></a>Hexo简介与安装</h2><p><strong>1. 什么是Hexo？</strong><br>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p><strong>2. 安装</strong><br>参照 <a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">官方文档</a> 完成相关安装步骤</p><p><strong>3. 初始化</strong><br>新建一个文件夹，比如blog，作为本地博客文件库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 初始化</span><br><span class="line">$ cd blog</span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 生成静态界面</span><br><span class="line">$ hexo g（等同于hexo generate）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 启动服务</span><br><span class="line">$ hexo s（等同于hexo server）</span><br></pre></td></tr></table></figure><p>浏览器输入 <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000</a> 预览</p><h2 id="将本地Hexo博客同步到Github"><a href="#将本地Hexo博客同步到Github" class="headerlink" title="将本地Hexo博客同步到Github"></a>将本地Hexo博客同步到Github</h2><p><strong>1. 注册一个Github账号</strong><br>这里不做演示</p><p><strong>2. 创建Repository</strong><br>Repository的名字即为你博客的域名，命名规则是：<code>Github用户名.github.io</code>，比如Github用户名是<code>iamsea</code>，那仓库名是<code>iamsea.github.io</code>，创建后进入项目设置，会看到<br><img src="http://upload-images.jianshu.io/upload_images/2569188-e72c6ee27ec00264.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="成功创建博客仓库.png"></p><p><strong>3. Github添加SSH key</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 创建一个SSH key</span><br><span class="line">$ ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/2569188-78d31c96b826a7f7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="生成SSH key.png"><br>注: SSH key既是所生成id_rsa文件的全部内容，详细可以参考<a href="http://blog.csdn.net/binyao02123202/article/details/20130891" target="_blank" rel="external">这里</a></p><p>添加SSH key至Github<br><img src="http://upload-images.jianshu.io/upload_images/2569188-71362e5065ab9b3b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加SSH key.png"></p><p><strong>4. 修改本地站点配置</strong><br>打开<code>blog/_config.yml</code>文件，既站点配置文件，修改deploy字段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">     type: git</span><br><span class="line">     repo: https://github.com/iamsea/iamsea.github.io.git  #你的博客Repository链接</span><br><span class="line">     branch: master</span><br></pre></td></tr></table></figure></p><p><strong>5. 提交到Gighub</strong><br>安装hexo-deployer-git插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>生成静态界面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">或</span><br><span class="line">$ hexo generata</span><br></pre></td></tr></table></figure></p><p>提交部署到github<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br><span class="line">或</span><br><span class="line">$ 等同于hexo deploy</span><br></pre></td></tr></table></figure></p><p>合并的命令为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure></p><p>注：看到 <code>Deploy done: git</code>表示成功提交</p><p>至此，本地Hexo博客已经布署到Github了<br>浏览器输入<code>你的Github用户名.github.io</code>预览</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">官方文档</a><ul><li><a href="https://zorpz.github.io/blog/hexo%E6%90%AD%E5%BB%BA%E7%AE%80%E4%BB%8B.html" target="_blank" rel="external">hexo搭建简介</a></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hexo简介与安装&quot;&gt;&lt;a href=&quot;#Hexo简介与安装&quot; class=&quot;headerlink&quot; title=&quot;Hexo简介与安装&quot;&gt;&lt;/a&gt;Hexo简介与安装&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1. 什么是Hexo？&lt;/strong&gt;&lt;br&gt;Hexo 是一个快速
      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="Hexo搭建" scheme="http://yoursite.com/tags/Hexo%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
